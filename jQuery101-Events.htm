<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>jQuery 101 - Events</title>
    <link href="styles.css" rel="stylesheet" type="text/css" />
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js" type="text/javascript"></script>
    <script src="common.js" type="text/javascript"></script>
</head>

<body>
    <div id="arrow"></div>
    <div id="pageHeader">jQuery 101 - Making JavaScript Fun Again</div>
    <div id="topic">Events</div>
    <ul>
    	<li id="sub1" class="listitem" data-notes="The $(document).ready event is where all the magic happens. It's triggered once the DOM is completely loaded and ready to be referenced, but before extra resources, such as images are retrieved. A shortcut you can use is simply $(function).">
    		<img src="list.png" class="notes" /> <span class="item" id="ready">$(document).ready</span>
    	</li>
    	<li id="sub2" class="listitem" data-notes="There are built-in shortcuts for many common events in jQuery. But if you want more control, you can manually bind, as in the next example.">
    		<img src="list.png" class="notes" /> <span id="shortcut" class="item">Shortcuts (.dblClick)</span>
    	</li>
    	<li id="sub3" class="listitem" data-notes='Directly binding to events allows for more control. You can "bind" and "unbind" as needed, as shown in this example. This works well for objects that exist on the page upon creation, but not for objects added dynamically on the client side.'>
    		<img src="list.png" class="notes" /> <span id="binding" class="item">.bind / .unbind</span>
    	</li>
    	<li id="sub4" class="listitem" data-notes='Unfortunately, when we bind to events (or use a shortcut for the same purpose), any objects added dynamically that would fall under the same selector wrapper would not be bound. Via the "live" API, we can bind future objects, because the event handling is delegated to the full document.'>
    		<img src="list.png" class="notes" /> <span id="live" class="item">.live / .die:</span>
    	</li>
    	<li id="sub5" class="listitem" data-notes="">
    		&nbsp;&nbsp;&nbsp;&nbsp;<span class="notLive">Click me!</span> <span class="live">I live!</span> ...  <span id="dynamicLive"></span>
    	</li>
    	<li id="sub6" class="listitem" data-notes='In a recent release of jQuery, late binding of events was made more efficient via the "delegate" API. With this API, we can specify the delegate instead of falling back to the main parent, the document. In this example, we’re specifying a parent object as the delegate, so the event only needs to bubble up one level to be caught and handled.'>
    		<img src="list.png" class="notes" /> <span id="delegate" class="item">.delegate / .undelegate:</span>
    	</li>
    	<li id="sub7" class="listitem" data-notes="">
    		&nbsp;&nbsp;&nbsp;&nbsp;<span class="notDelegated">Click me!</span> <span class="delegated">I'm delegated!</span> ... <span id="dynamicDelegate"></span>
    	</li>
    	<li id="sub8" class="listitem" data-notes='In the next version of jQuery (1.7 – currently in beta), the preceding sets of binding options have been superseded by the "on" and "off" overloaded APIs. Based on the parameters passed to these, we get the same effect as with "bind", "live", or "delegate".'>
    		<img src="list.png" class="notes" /> <span id="onoff" class="item">.on / .off</span>
    	</li>
    	<li id="sub9" class="listitem" data-notes='Although you can suppress default behavior on objects like submission buttons by returning false from the event handler, this may not have the desired effect. It would actually prevent events from bubbling up. Using the jQuery "preventDefault" method will suppress the default behavior for the current event. The "stopPropagation" method will also prevent bubbling up as well.'>
    		<img src="list.png" class="notes" /> <span id="suppress" class="item">Suppressing Default Behavior</span>
    	</li>
    	<li id="sub10" class="listitem" data-notes="">
    		<img src="list.png" class="notes" /> <span id="hover" class="item">.hover</span>
    	</li>
    	<li id="sub11" class="listitem" data-notes="">
    		<img src="list.png" class="notes" /> <span id="more" class="item">More Information on Events</span>
    	</li>
    <ul>
	<div id="code" class="column"></div>
	<div id="info" class="column"></div>
    <div id="navPrev"><<< Previous</div>
    <div id="navNext">Next >>></div>
    <div id="notes"></div>
</body>

</html>

<script type="text/javascript">
	var prev = "jQuery101-Selectors.htm";
	var next = "jQuery101-Manipulation.htm";

    $(document).ready(function() {
    	alert("The DOM has loaded. You can now officially have fun!");

		$("#sub1, #sub2, #sub3, #sub4, #sub6, #sub8, #sub9, #sub10").click(function() {
			$("#added").remove();
		});

        $("#shortcut").dblclick(function() {
			alert("Stop clicking me so fast!")
		});

        $("#binding")
		.bind("mouseout", function() {
			$(this).text(".bind / .unbind");
		})
		.bind("click", function() {
			if ($(this).hasClass("bound")) {
				$(this).unbind("mouseover");
				$(this).removeClass("bound");
				$(this).text(".bind / .unbind");
			} else {
				$(this).bind("mouseover", function(e) {
					$(this).text("x = " + e.pageX + ", y = " + e.pageY);
					$(this).addClass("bound");
				})
			}
		});

        $(".notLive")
			.bind("click", function() {
				alert("Clicked!");
				$("#dynamicLive").append('<span id="addedLive" class="notLive">Clicking me does nothing!</span>');
            });

        $(".live")
			.live("click", function() {
				alert("Clicked!");
				$("#dynamicLive").append('<span id="addedLive" class="live">Clicking me works!</span>');
            });

        $(".notDelegated")
			.bind("click", function() {
				alert("Clicked!");
				$("#dynamicDelegate").append('<span id="addedDelegate" class="notDelegated">Clicking me does nothing!</span>');
            });

        $("ul")
			.delegate(".delegated", "click", function() {
				alert("Clicked!");
				$("#dynamicDelegate").append('<span id="addedDelegate" class="delegated">Clicking me works!</span>');
            });

		$("#noBubbling").live("click", function(e) {
			alert("My parent is *not* going to hear about this!");

			// Prevents link navigation.
			e.preventDefault();

			// Prevents parent objects from receiving this event.
			e.stopPropagation();
        });

    });

	function displayCode(id) {
		var code = "";
		$("#code").hide();

		switch (id) {
			case "1":
				code += '<span class="highlight">';
				code += '$(document).ready(function() {';
				code += spaces(4) + 'alert("The DOM has loaded. You can now officially have fun!");';
				code += spaces(0) + '});';
				code += spaces(0);
				code += spaces(0) + '<span class="comment">// Alternative syntax:</span>';
				code += spaces(0) + '$(function() {';
				code += spaces(4) + 'alert("The DOM has loaded. You can now officially have fun!");';
				code += spaces(0) + '});</span>';
				break;
			case "2":
				code += '<span class="highlight">';
				code += '$("#shortcut").dblclick(function() {';
				code += spaces(4) + 'alert("Stop clicking me so fast!");';
				code += spaces(0) + '});</span>';
				break;
			case "3":
				code += '<span class="highlight">$("#binding")';
				code += spaces(0) + '<span class="comment">// On mouseout, always redisplay the example label.</span>';
				code += spaces(0) + '.bind("mouseout", function() {';
				code += spaces(4) + '	$(this).text(".bind / .unbind");';
				code += spaces(0) + '})</span>';
				code += spaces(0) + '<span class="comment">// On a click, toggle the mouseover event.</span>';
				code += spaces(0) + '<span class="comment">// Keep track by adding and removing the "bound" class.</span>';
				code += spaces(0) + '<span class="highlight">.bind("click", function() {';
				code += spaces(4) + '	if ($(this).hasClass("bound")) {';
				code += spaces(8) + '		$(this).unbind("mouseover");';
				code += spaces(8) + '		$(this).removeClass("bound");';
				code += spaces(8) + '		$(this).text(".bind / .unbind");';
				code += spaces(4) + '	} else {';
				code += spaces(8) + '		$(this).bind("mouseover", function(e) {';
				code += spaces(12) + '			$(this).text("x = " + e.pageX + ", y = " + e.pageY);';
				code += spaces(12) + '			$(this).addClass("bound");';
				code += spaces(8) + '		})';
				code += spaces(4) + '	}';
				code += spaces(0) + '})</span>';
				break;
			case "4":
				code += '$(".notLive").bind("click", function() {';
				code += spaces(4) + 'alert("Clicked!");';
				code += spaces(4) + '$("#dynamicLive").append(&#39;&lt;span id="addedLive" class="notLive"&gt;Clicking me does nothing!&lt;/span&gt;&#39;);';
				code += spaces(0) + '});';
				code += spaces(0);
				code += '<span class="highlight">';
				code += spaces(0) + '$(".live").live("click", function() {';
				code += '</span>';
				code += spaces(4) + 'alert("Clicked!");';
				code += spaces(4) + '$("#dynamicLive").append(&#39;&lt;span id="addedLive" class="live"&gt;Clicking me works!&lt;/span&gt;&#39;);';
				code += spaces(0) + '});';
				break;
			case "6":
				code += '$(".notDelegated").bind("click", function() {';
				code += spaces(4) + 'alert("Clicked!");';
				code += spaces(4) + '$("#dynamicDelegate").append(&#39;&lt;span id="addedDelegate" class="notDelegated"&gt;Clicking me does nothing!&lt;/span&gt;&#39;);';
				code += spaces(0) + '});';
				code += spaces(0);
				code += '<span class="highlight">';
				code += spaces(0) + '$("ul").delegate(".delegated", "click", function() {';
				code += '</span>';
				code += spaces(4) + 'alert("Clicked!");';
				code += spaces(4) + '$("#dynamicDelegate").append(&#39;&lt;span id="addedDelegate" class="delegated"&gt;Clicking me works!&lt;/span&gt;&#39;);';
				code += spaces(0) + '});';
				break;
			case "9":
				code += '<a id="noBubbling" href="http://microsoft.com">Clicking this will NOT navigate to Microsoft.com!</a>';
				code += spaces(0);
				code += spaces(0) + '<span class="highlight">';
				code += '$("#noBubbling").live("click", function(e) {';
				code += spaces(4) + 'alert("My parent is *not* going to hear about this!");';
				code += spaces(0);
				code += spaces(4) + '<span class="comment">// Prevents link navigation.</span>';
				code += spaces(4) + 'e.preventDefault();';
				code += spaces(0);
				code += spaces(4) + '<span class="comment">// Prevents parent objects from receiving this event.</span>';
				code += spaces(4) + 'e.stopPropagation();';
				code += spaces(0) + '});</span>';
				$("#code").unbind("click");
				break;
			case "11":
				code += 'jQuery Event Documentation:';
				code += spaces(4) + '<a href="http://api.jquery.com/category/events/" target="_blank">http://api.jquery.com/category/events/</a>';
				break;
		}

		if (code != "") $("#code").html(code).show();
	}
</script>
